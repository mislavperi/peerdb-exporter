name: Build and release Helm chart

on:
  push:
    branches:
      - main
    paths:
      - 'chart/Chart.yaml'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Check if Chart.yaml version changed
      id: version_changed
      run: |
        git fetch origin main
        PREV_VERSION=$(git show HEAD^:chart/Chart.yaml | grep '^version:' | awk '{print $2}')
        CUR_VERSION=$(grep '^version:' chart/Chart.yaml | awk '{print $2}')
        echo "Previous version: $PREV_VERSION"
        echo "Current version: $CUR_VERSION"
        if [ "$PREV_VERSION" != "$CUR_VERSION" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
        else
          echo "changed=false" >> $GITHUB_OUTPUT
        fi

    - name: Set up Helm
      if: steps.version_changed.outputs.changed == 'true'
      uses: azure/setup-helm@v3

    - name: Log in to GitHub Container Registry for Helm
      if: steps.version_changed.outputs.changed == 'true'
      run: |
        echo ${{ secrets.GH_TOKEN }} | helm registry login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Extract Helm chart version
      if: steps.version_changed.outputs.changed == 'true'
      id: chart_version
      run: |
        VERSION=$(grep '^version:' ./chart/Chart.yaml | awk '{print $2}')
        echo "HELM_VERSION=${VERSION}" >> $GITHUB_OUTPUT

    - name: Get previous Helm chart version tag (helm-*)
      if: steps.version_changed.outputs.changed == 'true'
      id: prevtag
      run: |
        THIS_VERSION=${{ steps.chart_version.outputs.HELM_VERSION }}
        PREVTAG=$(git tag --sort=-creatordate | grep -E '^helm-' | grep -v "helm-${THIS_VERSION}" | tail -n1)
        echo "PREVTAG=$PREVTAG" >> $GITHUB_OUTPUT

    - name: Generate Helm changelog
      if: steps.version_changed.outputs.changed == 'true'
      id: changelog
      run: |
        if [ -z "${{ steps.prevtag.outputs.PREVTAG }}" ]; then
          RANGE=""
        else
          RANGE="${{ steps.prevtag.outputs.PREVTAG }}..HEAD"
        fi
        git log $RANGE --pretty=format:"* %s" --grep='\[HELM\]$' > CHANGELOG.helm.md
        cat CHANGELOG.helm.md

    - name: Package Helm chart
      if: steps.version_changed.outputs.changed == 'true'
      run: |
        helm package ./chart 

    - name: Push Helm chart to GHCR
      if: steps.version_changed.outputs.changed == 'true'
      run: |
        CHART_VERSION=${{ steps.chart_version.outputs.HELM_VERSION }}
        helm push peerdb-exporter-${CHART_VERSION}.tgz oci://ghcr.io/mislavperi/helm

    - name: Create GitHub Release with changelog
      if: steps.version_changed.outputs.changed == 'true'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: helm-${{ steps.chart_version.outputs.HELM_VERSION }}
        name: Helm Release ${{ steps.chart_version.outputs.HELM_VERSION }}
        body_path: CHANGELOG.helm.md
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
